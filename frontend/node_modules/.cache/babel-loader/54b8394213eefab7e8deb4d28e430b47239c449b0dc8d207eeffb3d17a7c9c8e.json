{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\shrim\\\\frontend\\\\src\\\\pages\\\\adminpages\\\\login\\\\AdminLogin.jsx\",\n  _s = $RefreshSig$();\n// AdminLogin.js\nimport React, { useState } from 'react';\nimport { useAuth } from './AuthContext';\nimport { sendVerificationCode, verifyCode } from './twilioService';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminLogin() {\n  _s();\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [verificationCode, setVerificationCode] = useState('');\n  const [step, setStep] = useState(1); // 1 for phone input, 2 for code input\n  const {\n    login\n  } = useAuth();\n  const navigate = useNavigate();\n  const handlePhoneSubmit = async e => {\n    e.preventDefault();\n    try {\n      await sendVerificationCode(phoneNumber);\n      setStep(2);\n    } catch (error) {\n      alert('Failed to send verification code.');\n    }\n  };\n  const handleCodeSubmit = async e => {\n    e.preventDefault();\n    try {\n      const data = await verifyUserCredentials(phoneNumber, verificationCode);\n      if (data.success) {\n        login({\n          role: data.user.role,\n          phoneNumber: data.user.phoneNumber\n        });\n        // Save login details\n        localStorage.setItem('loginDetails', JSON.stringify({\n          role: data.user.role,\n          phoneNumber: data.user.phoneNumber,\n          timestamp: new Date()\n        }));\n        navigate('/home'); // Redirect to home page\n      } else {\n        alert('Invalid credentials.');\n      }\n    } catch (error) {\n      alert('Failed to verify user credentials.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: step === 1 ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePhoneSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value),\n        placeholder: \"Phone Number\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send Verification Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCodeSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Verify Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: verificationCode,\n        onChange: e => setVerificationCode(e.target.value),\n        placeholder: \"Verification Code\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Verify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminLogin, \"hJp1rrjZD5C00i1ORECQCYLmgeQ=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["React","useState","useAuth","sendVerificationCode","verifyCode","useNavigate","jsxDEV","_jsxDEV","AdminLogin","_s","phoneNumber","setPhoneNumber","verificationCode","setVerificationCode","step","setStep","login","navigate","handlePhoneSubmit","e","preventDefault","error","alert","handleCodeSubmit","data","verifyUserCredentials","success","role","user","localStorage","setItem","JSON","stringify","timestamp","Date","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["E:/projects/shrim/frontend/src/pages/adminpages/login/AdminLogin.jsx"],"sourcesContent":["// AdminLogin.js\r\nimport React, { useState } from 'react';\r\nimport { useAuth } from './AuthContext';\r\nimport { sendVerificationCode, verifyCode } from './twilioService';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction AdminLogin() {\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [verificationCode, setVerificationCode] = useState('');\r\n    const [step, setStep] = useState(1); // 1 for phone input, 2 for code input\r\n    const { login } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    const handlePhoneSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await sendVerificationCode(phoneNumber);\r\n            setStep(2);\r\n        } catch (error) {\r\n            alert('Failed to send verification code.');\r\n        }\r\n    };\r\n\r\n    const handleCodeSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const data = await verifyUserCredentials(phoneNumber, verificationCode);\r\n            if (data.success) {\r\n                login({ role: data.user.role, phoneNumber: data.user.phoneNumber });\r\n                // Save login details\r\n                localStorage.setItem('loginDetails', JSON.stringify({ role: data.user.role, phoneNumber: data.user.phoneNumber, timestamp: new Date() }));\r\n                navigate('/home'); // Redirect to home page\r\n            } else {\r\n                alert('Invalid credentials.');\r\n            }\r\n        } catch (error) {\r\n            alert('Failed to verify user credentials.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {step === 1 ? (\r\n                <form onSubmit={handlePhoneSubmit}>\r\n                    <h2>Admin Login</h2>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={phoneNumber}\r\n                        onChange={(e) => setPhoneNumber(e.target.value)}\r\n                        placeholder=\"Phone Number\"\r\n                        required\r\n                    />\r\n                    <button type=\"submit\">Send Verification Code</button>\r\n                </form>\r\n            ) : (\r\n                <form onSubmit={handleCodeSubmit}>\r\n                    <h2>Verify Code</h2>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={verificationCode}\r\n                        onChange={(e) => setVerificationCode(e.target.value)}\r\n                        placeholder=\"Verification Code\"\r\n                        required\r\n                    />\r\n                    <button type=\"submit\">Verify</button>\r\n                </form>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}